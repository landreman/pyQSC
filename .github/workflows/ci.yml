# This file is based on examples in
# https://docs.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on: [push, pull_request]

jobs:
  CI:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
    # First print out lots of information. We do this in separate 
    # "name" blocks because otherwise the output gets mixed together
    # in the github actions log.

    - name: Print user and group id
      run: id

    - name: PWD
      run: pwd

    - name: apt-get stuff needed for libstell and vmec
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential gfortran openmpi-bin libopenmpi-dev libnetcdf-dev libnetcdff-dev liblapack-dev libscalapack-mpi-dev libhdf5-dev libhdf5-serial-dev git m4

    - uses: actions/checkout@v2
      # If we want submodules downloaded, uncomment the next 2 lines:
      #with:
      #  submodules: true

   # We must run actions/checkout@v2 before downloading and building VMEC, since checkout deletes the contents of the directory.
    - name: Download the VMEC2000 standalone repository
      run: git clone https://github.com/hiddensymmetries/VMEC2000.git

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: which python after python setup
      run: python --version

    - name: Install required python packages
      run: |
        python -m pip install --upgrade pip
        pip install wheel numpy mpi4py scipy matplotlib
    
    - name: env after adding python
      run: env

    - name: Add to LD_LIBRARY_PATH so scalapack etc can be found
      run: echo "LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV

    - name: env after adding to LD_LIBRARY_PATH
      run: env

    - name: ls in VMEC2000/python 1
      run: ls -l VMEC2000/python

    - name: Configure and install VMEC2000 module
      run: |
        cd VMEC2000
        cp cmake/machines/ubuntu.json cmake_config_file.json
        cat cmake_config_file.json
        pip install .

    - name: Try importing vmec module
      run: python -c "print(dir()); import vmec; print(dir()); print(dir(vmec)); print('package:', vmec.__package__); print('spec:', vmec.__spec__); print('doc:', vmec.__doc__); print('file:', vmec.__file__); print('path:', vmec.__path__)"

    - name: Install DESC
      run: pip install desc-opt

    - name: Run unit tests
      run: python3 -m unittest -v
